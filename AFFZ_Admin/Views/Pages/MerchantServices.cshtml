@using AFFZ_Admin.Controllers
@model IEnumerable<AFFZ_Admin.Models.ServiceDTO>
@{
    ViewData["Title"] = "Service List";
    var amountChangeRequests = ViewBag.AmountChangeRequests as List<AmountChangeRequestDTO>;
    string databagtesxt = "abc";
}
<div class="page-wrapper">
    <div class="content container-fluid">
        <!-- Page Header -->
        <div class="page-header">
            <div class="row align-items-center">
                <div class="col-md-6">
                    <h4 class="page-title">
                        Service List For Merchant
                        @{
                            var serviceList = ViewBag.ServiceList as List<AFFZ_Admin.Models.ServiceDTO>;
                            if (serviceList != null && serviceList.Count > 0 && serviceList[0]?.Merchant != null)
                            {
                                @serviceList[0].Merchant.CompanyName
                            }
                            else
                            {
                                <text>-</text>
                                // or any fallback text
                            }
                        }
                    </h4>
                </div>
                @* <div class="col-md-6 text-end">
                    <a href="@Url.Action("MerchantServiceCreate")" class="btn btn-primary">
                        <i class="fas fa-plus me-2"></i>Create New Service
                    </a>
                </div> *@
            </div>
        </div>

        <!-- Success/Error Messages -->
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success">
                <i class="fas fa-check-circle me-2"></i>@TempData["SuccessMessage"]
            </div>
        }
        @if (TempData["FailMessage"] != null)
        {
            <div class="alert alert-danger">
                <i class="fas fa-times-circle me-2"></i>@TempData["FailMessage"]
            </div>
        }

        <!-- Service Table -->
        <div class="table-responsive">
            <table class="table table-bordered table-hover custom-table datatable mb-0" id="data-table">
                <thead class="table-light">
                    <tr>
                        <th><i class="fas fa-clipboard-list me-2"></i>Service Name</th>
                        <th><i class="fas fa-dollar-sign me-2"></i>Service Price</th>
                        <th><i class="fas fa-hand-holding-usd me-2"></i>Pay Merchant</th>
                        <th><i class="fas fa-user-tie me-2"></i>Admin Commission</th>
                        <th><i class="fas fa-tags me-2"></i>Amount Deduction Type</th>
                        <th><i class="fas fa-bell me-2"></i>Request Status</th> <!-- New Column -->
                        <th><i class="fas fa-cogs me-2"></i>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var service in ViewBag.ServiceList)
                    {
                        <tr>
                            <td>@service.ServiceName</td>
                            <td><span class="currency">@service.ServicePrice</span></td>
                            <td>
                                <a href="javascript:void(0);" class="edit-admin-commission"
                                data-id="@service.ServiceId"
                                data-price="@service.ServicePrice"
                                data-value="@service.DeductionValue"
                                data-type="@service.DeductionType">
                                    <span class="currency">@service.ServiceAmountPaidToAdmin</span>
                                </a>
                            </td>
                            <td><span class="currency">@service.DeductionValue</span></td>
                            <td>
                                @if (service.DeductionType == "Fix")
                                {
                                    <i class="fas fa-lock me-1" title="Fixed Deduction"></i>
                                }
                                else if (service.DeductionType == "Percentage")
                                {
                                    <i class="fas fa-percent me-1" title="Percentage Deduction"></i>
                                }
                                @service.DeductionType</td>
                            <td>
                                @if (amountChangeRequests == null)
                                {
                                    <span class="text-muted">No Request</span>
                                }
                                else if (amountChangeRequests != null && amountChangeRequests.Any(r => r.ServiceId == service.ServiceId))
                                {
                                    var request = amountChangeRequests.FirstOrDefault(r => r.ServiceId == service.ServiceId);
                                    if (request.Status == "Pending")
                                    {
                                        <a href="javascript:void(0);" class="view-request-details" data-id="@service.ServiceId">
                                            <i class="fas fa-exclamation-circle text-warning" title="Pending Request"></i> Pending
                                        </a>
                                    }
                                    else if (request.Status == "Approved")
                                    {
                                        <span class="text-success"><i class="fas fa-check-circle me-1"></i> Accepted</span>
                                    }
                                    else if (request.Status == "Rejected")
                                    {
                                        <span class="text-danger"><i class="fas fa-times-circle me-1"></i> Rejected</span>
                                    }
                                }
                                else
                                {
                                    
                                        <span class="text-muted">No Request</span>
                                }
                            </td>

                            <td>
                                <div class="d-flex">
                                    @* <a href="@Url.Action("MerchantServiceEdit", "MerchantService", new { id = service.ServiceId })" class="btn btn-sm btn-warning me-2">
                                        <i class="fas fa-edit"></i>
                                    </a> *@
                                    <button data-id="@service.ServiceId" class="btn btn-sm btn-danger delete-service me-2">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                    @* <button data-id="@service.ServiceId" class="btn btn-sm btn-info view-service">
                                        <i class="fas fa-eye"></i>
                                    </button> *@
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

</div>

<!-- View Service Modal -->
<div class="modal fade" id="viewServiceModal" tabindex="-1" aria-labelledby="viewServiceLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="viewServiceLabel">Service Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Service Details will be loaded here via AJAX -->
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="editCommissionModal" tabindex="-1" aria-labelledby="editCommissionLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="editCommissionLabel">Edit Admin Commission</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="serviceId" />
                <input type="hidden" id="servicePrice" />
                <input type="hidden" id="deductionType" />

                <div class="mb-3">
                    <label class="form-label">Deduction Type:</label>
                    <strong id="deductionTypeText" class="text-primary"></strong>
                </div>
                <div class="mb-3">
                    <label class="form-label">Merchant Will Get:</label>
                    <input type="text" id="merchantWillGet" class="form-control" readonly />
                </div>

                <div class="mb-3">
                    <label class="form-label">Admin Commission:</label>
                    <input type="number" id="adminCommissionInput" class="form-control" placeholder="Enter New Commission" />
                </div>

                
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-success" id="saveCommissionBtn">Save</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="viewRequestModal" tabindex="-1" aria-labelledby="viewRequestLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-info text-white">
                <h5 class="modal-title" id="viewRequestLabel">Request Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Request details will be dynamically loaded here -->
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/limonte-sweetalert2/11.7.5/sweetalert2.min.js"></script>
    <script type="text/javascript">
        // Replace the currency dynamically based on the user's region
        document.querySelectorAll('.currency').forEach(el => {
            el.innerHTML = new Intl.NumberFormat('en-US', { style: 'currency', currency: 'AED' }).format(el.innerHTML);
        });
        $(document).on('click', '.view-service', function() {
            var serviceId = $(this).data('id');
            $.ajax({
                url: '@Url.Action("ViewService", "MerchantService")',
                data: { id: serviceId },
                success: function(data) {
                    $('#viewServiceModal .modal-body').html(data);
                    $('#viewServiceModal').modal('show');
                }
            });
        });

        $(document).on('click', '.delete-service', function() {
            var serviceId = $(this).data('id');
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = '@Url.Action("MerchantServiceDeleteConfirmed", "MerchantService")?id=' + serviceId;
                }
            });
        });
            $(document).ready(function () {
            $(".edit-admin-commission").click(function () {
                var serviceId = $(this).data("id");
                var servicePrice = parseFloat($(this).data("price"));
                var deductionValue = parseFloat($(this).data("value"));
                var deductionType = $(this).data("type");

                $("#serviceId").val(serviceId);
                $("#servicePrice").val(servicePrice);
                $("#deductionType").val(deductionType);
                $("#adminCommissionInput").val(deductionValue);
                $("#deductionTypeText").text(deductionType);

                updateMerchantAmount();

                $("#editCommissionModal").modal("show");
            });

            $("#adminCommissionInput").on("input", function () {
                updateMerchantAmount();
            });

            function updateMerchantAmount() {
                var servicePrice = parseFloat($("#servicePrice").val());
                var adminCommission = parseFloat($("#adminCommissionInput").val()) || 0;
                var deductionType = $("#deductionType").val();
                var merchantAmount = 0;

                if (deductionType === "Fix") {
                    merchantAmount = servicePrice - adminCommission;
                } else if (deductionType === "Percentage") {
                    merchantAmount = servicePrice - (servicePrice * (adminCommission / 100));
                }

                $("#merchantWillGet").val(merchantAmount.toFixed(2));
            }

            $("#saveCommissionBtn").click(function () {
                var serviceId = $("#serviceId").val();
                var newCommission = $("#adminCommissionInput").val();

                $.ajax({
                    url: '@Url.Action("MerchantServiceEdit", "Providers")',
                    type: 'POST',
                    data: {
                        serviceId: serviceId,
                        AmountTopayToAdmin: newCommission
                    },
                    success: function (response) {
                        Swal.fire('Success!', 'Admin Commission updated successfully!', 'success')
                            .then(() => location.reload());
                    },
                    error: function () {
                        Swal.fire('Error!', 'Failed to update Admin Commission.', 'error');
                    }
                });
            });
        });
        $(document).on("click", ".approve-request", function () {
            const requestId = $(this).data("id");

            $.post("/MerchantService/ApproveAmountChange", { requestId: requestId, isApproved: true }, function (response) {
                alert(response);
                location.reload();
            }).fail(function () {
                alert("Failed to approve request.");
            });
        });

        $(document).on("click", ".reject-request", function () {
            const requestId = $(this).data("id");

            $.post("/MerchantService/ApproveAmountChange", { requestId: requestId, isApproved: false }, function (response) {
                alert(response);
                location.reload();
            }).fail(function () {
                alert("Failed to reject request.");
            });
        });
        $(document).on('click', '.view-request-details', function () {
            var requestId = $(this).data('id');
            $.ajax({
                url: '/Providers/GetRequestDetails',
                data: { requestId: requestId },
                success: function (data) {
                    $('#viewRequestModal .modal-body').html(data);
                    $('#viewRequestModal').modal('show');
                },
                error: function () {
                    alert('Failed to load request details.');
                }
            });
        });
        $(document).ready(function () {
            console.log("Main page script loaded.");

            // Handle Accept Request
            $(document).on("click", "#accept-request-btn", function () {
                const requestId = $(this).data("id");
                console.log("Accept request for:", requestId);

                $.post('/Providers/ApproveRequest', { requestId: requestId }, function (response) {
                    alert('Request has been approved.');
                    $('#viewRequestModal').modal('hide');
                    location.reload();
                }).fail(function () {
                    alert('Failed to approve the request.');
                });
            });

            // Handle Reject Request
            $(document).on("click", "#reject-request-btn", function () {
                console.log("Reject button clicked.");
                $("#reject-reason-container").slideDown();
            });

            // Handle Submit Rejection
            $(document).on("click", "#submit-rejection-btn", function () {
                const requestId = $(this).data("id");
                const rejectionReason = $("#reject-reason").val().trim();

                if (!rejectionReason) {
                    alert('Please provide a reason for rejection.');
                    return;
                }

                console.log("Submitting rejection for:", requestId, "Reason:", rejectionReason);

                $.post('/Providers/RejectRequest', { requestId: requestId, reason: rejectionReason }, function (response) {
                    alert('Request has been rejected with reason.');
                    $('#viewRequestModal').modal('hide');
                    location.reload();
                }).fail(function () {
                    alert('Failed to reject the request.');
                });
            });
        });

    </script>
}